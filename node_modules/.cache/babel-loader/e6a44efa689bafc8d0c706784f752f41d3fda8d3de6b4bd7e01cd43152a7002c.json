{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\react-black\\\\black\\\\src\\\\components\\\\Contact.js\",\n  _s = $RefreshSig$();\nimport React, { Component } from 'react';\nimport Navbar from '../pages/Navbar';\nimport Body_Contact from '../pages/Body_Contact';\nimport { useState, useEffect } from 'react';\nimport Body_Loading from '../pages/Body_Loading';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contact() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    // Simuler une requête asynchrone (remplacez ceci par votre appel API réel)\n    setTimeout(() => {\n      // Une fois les données chargées, masquez la page de chargement\n      setLoading(false);\n      // Mettez à jour l'état avec les données reçues\n      setData(); // Remplacez \"mockData\" par les données réelles\n    }, 1000); // Temps de délai simulé de 2 secondes\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [data && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.name\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Body_Contact, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Contact, \"EqmXxTNe6/Onm1/o8y2B4tS3LuE=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","Component","Navbar","Body_Contact","useState","useEffect","Body_Loading","Fragment","_Fragment","jsxDEV","_jsxDEV","Contact","_s","loading","setLoading","data","setData","setTimeout","children","map","item","name","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/laragon/www/react-black/black/src/components/Contact.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport Navbar from '../pages/Navbar'\r\nimport Body_Contact from '../pages/Body_Contact'\r\nimport { useState, useEffect } from 'react';\r\nimport Body_Loading from '../pages/Body_Loading';\r\n\r\nfunction Contact() {\r\n  const [loading, setLoading] = useState(true);\r\n    const [data, setData] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      // Simuler une requête asynchrone (remplacez ceci par votre appel API réel)\r\n      setTimeout(() => {\r\n        // Une fois les données chargées, masquez la page de chargement\r\n        setLoading(false);\r\n        // Mettez à jour l'état avec les données reçues\r\n        setData(); // Remplacez \"mockData\" par les données réelles\r\n      }, 1000); // Temps de délai simulé de 2 secondes\r\n    }, []);\r\n    if (loading) {\r\n      return <>\r\n      \r\n      </>;\r\n    }\r\n    return (\r\n      <>\r\n       {data && (\r\n        <ul>\r\n          {data.map((item) => (\r\n            <li key={item.id}>{item.name}</li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <div>\r\n      <Navbar />\r\n      <Body_Contact />\r\n      </div>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default Contact\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,YAAY,MAAM,uBAAuB;AAChD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,YAAY,MAAM,uBAAuB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACAY,UAAU,CAAC,MAAM;MACf;MACAH,UAAU,CAAC,KAAK,CAAC;MACjB;MACAE,OAAO,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EACN,IAAIH,OAAO,EAAE;IACX,oBAAOH,OAAA,CAAAF,SAAA,mBAEL,CAAC;EACL;EACA,oBACEE,OAAA,CAAAF,SAAA;IAAAU,QAAA,GACEH,IAAI,iBACJL,OAAA;MAAAQ,QAAA,EACGH,IAAI,CAACI,GAAG,CAAEC,IAAI,iBACbV,OAAA;QAAAQ,QAAA,EAAmBE,IAAI,CAACC;MAAI,GAAnBD,IAAI,CAACE,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL,eACDhB,OAAA;MAAAQ,QAAA,gBACAR,OAAA,CAACR,MAAM;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVhB,OAAA,CAACP,YAAY;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAAA,eACJ,CAAC;AAET;AAACd,EAAA,CAjCQD,OAAO;AAAAgB,EAAA,GAAPhB,OAAO;AAmChB,eAAeA,OAAO;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}